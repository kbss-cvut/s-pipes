# baseURI: http://onto.fel.cvut.cz/ontologies/s-pipes/hello-world-example-0.1
# imports: http://onto.fel.cvut.cz/ontologies/s-pipes-lib

@prefix : <http://onto.fel.cvut.cz/ontologies/s-pipes/hello-world-example-0.1/> .
@prefix doc: <http://onto.fel.cvut.cz/ontologies/documentation/> .
@prefix kbss-module: <http://onto.fel.cvut.cz/ontologies/lib/module/> .
@prefix km-sesame: <http://onto.fel.cvut.cz/ontologies/lib/module/sesame/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sm: <http://topbraid.org/sparqlmotion#> .
@prefix sml: <http://topbraid.org/sparqlmotionlib#> .
@prefix sp: <http://spinrdf.org/sp#> .
@prefix spif: <http://spinrdf.org/spif#> .
@prefix spin: <http://spinrdf.org/spin#> .
@prefix spl: <http://spinrdf.org/spl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<http://onto.fel.cvut.cz/ontologies/s-pipes/hello-world-example-0.1>
  a owl:Ontology ;
  owl:imports <http://onto.fel.cvut.cz/ontologies/s-pipes-lib> ;
.
:bind-person-name
  a sml:BindWithConstant ;
  sm:next :bind-person-id ;
  sm:outputVariable "personName" ;
  sml:value [ a sp:Expression ;
              sp:text """concat(?firstName, " ", ?lastName)""" ;
    ] ;
  rdfs:label "Bind person name" ;
.
:bind-person-id
  a sml:BindBySelect ;
  sm:next :construct-greeting ;
  sml:selectQuery [
      a sp:Select ;
      sp:text """
SELECT ?personId
WHERE {
    BIND(replace(lcase(?personName)," ", "-") as ?personId)
}
""" ;
    ] ;
  rdfs:label "Bind person id" ;
.
:construct-greeting
  a sml:ApplyConstruct ;
  sm:next :express-greeting_Return ;
  sml:constructQuery [
      a sp:Construct ;
      sp:text """
PREFIX : <http://onto.fel.cvut.cz/ontologies/s-pipes/hello-world-example-0.1/>
CONSTRUCT {
    ?person :is-greeted-by-message ?greetingMessage .
} WHERE {
    BIND(iri(concat(str(:), ?personId)) as ?person)
    BIND(concat("Hello ", ?personName, ".") as ?greetingMessage)
}
""" ;
    ] ;
  sml:replace true ;
  rdfs:label "Construct greeting" ;
.
:execute-greeting
  a sm:Function ;
  sm:returnModule :express-greeting_Return ;
  rdfs:comment "This function constructs a hello world message for a person given their first and last name." ;
   sh:parameter [
       sh:path :firstName ;
       sh:datatype xsd:string ;
       sh:description "The first name of the greeted person." ;
       sh:minCount 1 ;
     ] ;
   sh:parameter [
       sh:path :lastName ;
       sh:datatype xsd:string ;
       sh:description "The last name of the greeted person." ;
       sh:minCount 1 ;
     ] ;
.
:express-greeting_Return
  a sml:ReturnRDF ;
  sml:serialization sml:JSONLD ;
  rdfs:label "Return greeting statement" ;
.
