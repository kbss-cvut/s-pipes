@prefix afn: <http://jena.hpl.hp.com/ARQ/function#> .
@prefix kbss-genf: <http://onto.fel.cvut.cz/ontologies/lib/function/general/> .
@prefix kbss-spif: <http://onto.fel.cvut.cz/ontologies/lib/spin-function/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sm: <http://topbraid.org/sparqlmotion#> .
@prefix sml: <http://topbraid.org/sparqlmotionlib#> .
@prefix sp: <http://spinrdf.org/sp#> .
@prefix spin: <http://spinrdf.org/spin#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix ex: <http://example.org/> .

ex:ask-constraint
  ex:has-query [
      rdf:type sp:Ask ;
      sp:where (
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:not ;
                sp:arg1 [
                    rdf:type sp:bound ;
                    sp:arg1 [
                        sp:varName "descriptorType" ;
                      ] ;
                  ] ;
              ] ;
          ]
        ) ;
    ] ;
.

ex:construct-with-comments
  ex:has-query [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "o" ;
              ] ;
            sp:predicate [
                sp:varName "p" ;
              ] ;
            sp:subject [
                sp:varName "s" ;
              ] ;
          ]
        ) ;
      sp:text """# comment1: output triples that does not pose an issue
CONSTRUCT {
    ?s ?p ?o .
}
WHERE {
    ?s ?p ?o .
# comment2: issue no. 1 -- datatype(?str) returning <xsd_string>
    FILTER(! kbss-genf:matches-relative-iri(?o, "xsd_string"))
}""" ] ;
.

